/*
 * k.java
 *
 * Created on __DATE__, __TIME__
 */

package form;

import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.UIManager;

import com.sunmap.shpdata.tools.util.JdbcUtil;
import com.sunmap.shpdata.tools.util.Util;

/**
 * 
 * @author __USER__
 */
public class TableSubArea extends javax.swing.JDialog {
	/** A return status code - returned if Cancel button has been pressed */
	public static final int RET_CANCEL = 0;
	/** A return status code - returned if OK button has been pressed */
	public static final int RET_OK = 1;

	public static String elementstring = "";
	
	private List<File> flielist;

	/** Creates new form k */
	public TableSubArea(java.awt.Frame parent, boolean modal, String elementstring, List<File> filelist) {
		super(parent, modal);
		this.elementstring = elementstring;
		this.flielist = filelist;
		initComponents();
	}

	/** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
	public int getReturnStatus() {
		return returnStatus;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		this.setLocation(420, 300);
		okButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		jButton1 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		jEditorPane1 = new javax.swing.JEditorPane();
		jTextField1 = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();

		setTitle("分区选择");
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				closeDialog(evt);
			}
		});

		okButton.setText("是");
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});

		cancelButton.setText("取消");
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		jButton1.setText("否");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jScrollPane1
				.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		jScrollPane1
				.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

		jPanel1.setBackground(new java.awt.Color(251, 251, 251));

		jLabel1.setFont(new java.awt.Font("楷体_GB2312", 0, 18));
		jLabel1.setText("是否选择分区：");

		jScrollPane2.setBorder(null);
		jScrollPane2
				.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		jScrollPane2
				.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

		jEditorPane1.setBackground(new java.awt.Color(251, 251, 251));
		jEditorPane1.setEditable(false);
		jEditorPane1.setText("      您好！由于您选择的要素" + elementstring
				+ "记录数较多建议通过mymapid字段进行分区，" + "若分区请将分区标示填写到以下输入框后点击“是”，"
				+ "若不进行分区选择“否”，若点击“取消”则结束本次操作");
		jScrollPane2.setViewportView(jEditorPane1);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jScrollPane2,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																508,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel1))
										.addContainerGap(401, Short.MAX_VALUE)));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(jLabel1)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												75,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(39, Short.MAX_VALUE)));

		jScrollPane1.setViewportView(jPanel1);

		jLabel2.setText("分区标示：");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap().addComponent(
						jLabel2).addGap(27, 27, 27).addComponent(jTextField1,
						javax.swing.GroupLayout.PREFERRED_SIZE, 160,
						javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18,
						18).addComponent(okButton,
						javax.swing.GroupLayout.PREFERRED_SIZE, 67,
						javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18,
						18).addComponent(jButton1,
						javax.swing.GroupLayout.PREFERRED_SIZE, 66,
						javax.swing.GroupLayout.PREFERRED_SIZE).addGap(10, 10,
						10).addComponent(cancelButton,
						javax.swing.GroupLayout.PREFERRED_SIZE, 79,
						javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()).addComponent(jScrollPane1,
				javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addComponent(jScrollPane1,
						javax.swing.GroupLayout.PREFERRED_SIZE, 117,
						javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18,
						18).addGroup(
						layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jTextField1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel2).addComponent(okButton)
								.addComponent(jButton1).addComponent(
										cancelButton)).addContainerGap()));
		this.setIconImage(Toolkit.getDefaultToolkit().createImage(this.getClass().getResource("/load1/apple.JPG")));
		pack();
	}// </editor-fold>

	// GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		doClose(RET_OK);
	}

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okButtonActionPerformed
		JOptionPane jop = new JOptionPane();
		if(jTextField1.getText() == null || "".equals(jTextField1.getText().trim())){
			jop.showMessageDialog(null, "您没有填写分区标示");
			return;
		}
		String[] tablenameStrings = elementstring.split(",");
		try {
			
		
		for(int i = 0 ; i < tablenameStrings.length ; i++){
			tablenameStrings[i] = tablenameStrings[i].substring(0, tablenameStrings[i].lastIndexOf("("));
		}
		List<String> tablenameList = Arrays.asList(tablenameStrings);
		for (File file : flielist) {
			String tablenameString = Util.returnTableName(file)[0];
			if(tablenameList.contains(tablenameString.toLowerCase())){
				String pathString = file.getPath();
				List<String> pathList = Arrays.asList(pathString.split("\\\\"));
				if(pathList.contains(jTextField1.getText()) && pathList.indexOf(jTextField1.getText()) != (pathList.size() - 1)){
					int state = pathList.indexOf(jTextField1.getText()) + 1;
					List<String> subnameList = Util.subAreaName.get(tablenameString);
					if(subnameList == null){
						subnameList = new ArrayList<String>();
					}
					JdbcUtil.createPostSubArea(tablenameString, tablenameString + "_" + pathList.get(state), pathList.get(state), "mymapid");
					subnameList.add(pathList.get(state));
					Util.subAreaName.put(tablenameString, subnameList);
				}
			}
		}
		} catch (Exception e) {
			// TODO: handle exception
			jop.showMessageDialog(null, "分区出错");
			e.printStackTrace();
		}
		doClose(RET_OK);
	}// GEN-LAST:event_okButtonActionPerformed

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
		Util.flag = false;
		Form.setTextCon("此次导入取消");
		doClose(RET_CANCEL);
	}// GEN-LAST:event_cancelButtonActionPerformed

	/** Closes the dialog */
	private void closeDialog(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_closeDialog
		doClose(RET_CANCEL);
	}// GEN-LAST:event_closeDialog

	private void doClose(int retStatus) {
		returnStatus = retStatus;
		setVisible(false);
		dispose();
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Exception e) {
			e.printStackTrace();
		}
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				TableSubArea dialog = new TableSubArea(
						new javax.swing.JFrame(),
						true,
						"FName(1400w),R(300w),P(500w),D(200w),FName(1400w),R(300w),P(500w),D(200w),FName(1400w),R(300w),P(500w),D(200w),FName(1400w),R(300w),P(500w),D(200w)",null);
				dialog.setIconImage(Toolkit.getDefaultToolkit().getImage(
						"enter.jpg"));
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				// dialog.setIconImage(Toolkit.getDefaultToolkit().createImage(k.class.getResource("/load1/001.gif")));
				dialog.setVisible(true);
			}
		});
	}

	// GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton cancelButton;
	private javax.swing.JButton jButton1;
	private javax.swing.JEditorPane jEditorPane1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JButton okButton;
	// End of variables declaration//GEN-END:variables

	private int returnStatus = RET_CANCEL;
}