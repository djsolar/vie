/*
 * selecter.java
 *
 * Created on __DATE__, __TIME__
 */

package form;

import java.awt.Toolkit;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.UIManager;


import formconf.TestJdbcUtil;
import formconf.Pro;

/**
 * 
 * @author __USER__
 */
public class Selecter extends javax.swing.JFrame {

	/** Creates new form selecter */
	private String sird;

	public Selecter() {
		initComponents();
	}

	public Selecter(String srid) {
		sird = srid;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		this.setLocation(350, 300);
		jScrollPane1 = new javax.swing.JScrollPane();
		jPanel1 = new javax.swing.JPanel();
		jComboBox1 = new javax.swing.JComboBox();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		this.setTitle("数据导入工具");
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		// setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
		jScrollPane1.setBorder(javax.swing.BorderFactory
				.createTitledBorder("数据库选择"));
		jScrollPane1
				.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		jScrollPane1
				.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
		if (sird == null) {
			jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(
					new String[] { "添加新的数据库连接" }));
			List<String> list = new Pro().getconfproName();
			for (int i = 0; i < list.size(); i++) {
				jComboBox1.addItem(list.get(i));
			}
		} else {
			setJComboBox1(sird);
		}
		jComboBox1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox1ActionPerformed(evt);
			}
		});

		jButton1.setText("新建数据库连接");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("确定");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jButton3
				.setText("编辑已选择数据库连接");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jLabel1.setText("选择连接的数据库");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(jLabel1)
										.addGap(34, 34, 34)
										.addComponent(
												jComboBox1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												260,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jButton1)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jButton3)
										.addContainerGap())
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap(300, Short.MAX_VALUE)
										.addComponent(
												jButton2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												100,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(302, 302, 302)));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addGap(30, 30, 30)
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jButton3)
														.addComponent(jButton1)
														.addComponent(
																jComboBox1,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel1))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												34, Short.MAX_VALUE)
										.addComponent(jButton2)
										.addContainerGap()));

		jScrollPane1.setViewportView(jPanel1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addContainerGap().addComponent(
						jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE,
						708, Short.MAX_VALUE).addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addContainerGap().addComponent(
						jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE,
						147, Short.MAX_VALUE).addContainerGap()));
		this.setIconImage(Toolkit.getDefaultToolkit().createImage(this.getClass().getResource("/load1/apple.JPG")));
		pack();
	}// </editor-fold>

	// GEN-END:initComponents

	private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		Pro pro = new Pro();
		JOptionPane jop = new JOptionPane();
		if ("添加新的数据库连接".equals(jComboBox1.getSelectedItem().toString())) {
			jop.showMessageDialog(null, "请选择数据库");
			return;
		}
		String valString = pro
				.getValue(jComboBox1.getSelectedItem().toString());
		String[] arr = valString.split("%");
		String pass = "";
		if (arr.length == 5) {
			pass = arr[4];
		}
		try {
			TestJdbcUtil.connect(arr[1], arr[2], arr[0], arr[3], pass);
			jop.showMessageDialog(null, "连接数据库成功");
		} catch (Exception e1) {
			// TODO Auto-generated catch block
			jop.showMessageDialog(null, "连接数据库失败");
			// e1.printStackTrace();
			return;
		}
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Exception e) {
			e.printStackTrace();
		}
		TestJdbcUtil.savedatabase(arr[1], arr[2], arr[0], arr[3], pass);
		if (sird == null) {
			Runnable runnable = new Runnable() {
				public void run() {
					Fileinputpath fileinputpath = new Fileinputpath();
					fileinputpath.setResizable(false);
					fileinputpath.setVisible(true);
				}
			};
			java.awt.EventQueue.invokeLater(runnable);
		}
		this.dispose();
	}

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		if ("添加新的数据库连接".equals(jComboBox1.getSelectedItem().toString())) {
			return;
		}

		Databaseconnect databaseconnect = new Databaseconnect(jComboBox1
				.getSelectedItem().toString(), new javax.swing.JFrame(), true);
		databaseconnect.setVisible(true);
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		Databaseconnect databaseconnect = new Databaseconnect(
				new javax.swing.JFrame(), true);
		databaseconnect.setVisible(true);
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Exception e) {
			e.printStackTrace();
		}
		Selecter selecter = new Selecter();
		selecter.setResizable(false);
		selecter.setVisible(true);
	}

	public static void setJComboBox1(String item) {
		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { item }));
		List<String> list = new Pro().getconfproName();
		for (int i = 0; i < list.size(); i++) {
			if (list.get(i).equals(item)) {
				continue;
			}
			jComboBox1.addItem(list.get(i));
		}

	}

	// GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private static javax.swing.JComboBox jComboBox1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	// End of variables declaration//GEN-END:variables
	// public static javax.swing.JComboBox getJComboBox1() {
	// return jComboBox1;
	// }

}